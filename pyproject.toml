[tool]
[tool.poetry]
name = "challenge"
version = "0.1.0"
homepage = "https://github.com/gbelouze/challenge"
description = "Code for the data challenge of the MVA course Kernel Methods.."
authors = ["Gabriel Belouze <gabriel.belouze@ens.psl.eu>"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
]
packages = [
    { include = "challenge", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
numpy = ">=1.20.3"
matplotlib = ">=3.4.2"
click = "^8.0.3"

black  = { version = "20.8b1", optional = true}
isort  = { version = "5.6.4", optional = true}
flake8  = { version = "3.8.4", optional = true}
flake8-docstrings = { version = "^1.6.0", optional = true }
pytest  = { version = "6.1.2", optional = true}
virtualenv  = { version = "^20.2.2", optional = true}
pip  = { version = "^20.3.1", optional = true}
mkdocs  = { version = "^1.1.2", optional = true}
mkdocs-include-markdown-plugin  = { version = "^1.0.0", optional = true}
mkdocs-material  = { version = "^6.1.7", optional = true}
mkdocstrings  = { version = "^0.13.6", optional = true}
mkdocs-material-extensions  = { version = "^1.0.1", optional = true}
livereload = { version = "^2.6.3", optional = true}
twine  = { version = "^3.3.0", optional = true}
mkdocs-autorefs = {version = "0.1.1", optional = true}
pre-commit = {version = "^2.12.0", optional = true}
toml = {version = "^0.10.2", optional = true}
kaggle = "^1.5.12"
rich = "^11.2.0"
pandas = "^1.4.1"
ipykernel = "^6.9.1"
overrides = "^6.1.0"
scipy = "^1.8.0"

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "flake8",
    "flake8-docstrings",
    ]

dev = ["pre-commit", "virtualenv", "pip", "twine", "toml"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
